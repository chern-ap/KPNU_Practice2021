Given the triangle of consecutive odd numbers:

             1
          3     5
       7     9    11
   13    15    17    19
21    23    25    27    29
...

Calculate the sum of the numbers in the nth row of this triangle (starting at index 1) e.g.: (Input --> Output)

1 -->  1
2 --> 3 + 5 = 8

Sample Tests:
#include <inttypes.h>
#include <criterion/criterion.h>

uint64_t rowSumOddNumbers(uint32_t n);

void test_rowSumOddNumbers(uint32_t n, uint64_t expected)
{
    uint64_t actual = rowSumOddNumbers(n);
    cr_assert_eq(rowSumOddNumbers(n), expected,
        "rowSumOddNumbers(%" PRIu32 ") should return %" PRIu64 ", actual: %" PRIu64 "\n",
        n, expected, actual);
}

Test(rowSumOddNumbers, should_pass_some_example_tests)
{
    test_rowSumOddNumbers(1, 1);
    test_rowSumOddNumbers(2, 8);
    test_rowSumOddNumbers(42, 74088);
}
