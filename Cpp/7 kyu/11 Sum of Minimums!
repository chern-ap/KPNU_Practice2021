Given a 2D vector of size m * n. Your task is to find the sum of minimum value in each row.

For Example:

{
  {1,2,3,4,5},       // minimum value of row is 1
  {5,6,7,8,9},       // minimum value of row is 5
  {20,21,34,56,100}  // minimum value of row is 20
}

So, the function should return 26 because sum of minimums is as 1 + 5 + 20 = 26

Note: You will be always given non-empty vector containing Positive values.

Sample Tests:
#include <vector>
using namespace std;
Describe(Minimum_Sum)
{
   It(Fixed_Tests)
    {
        std::vector<vector<int>> test = {{7,9,8,6,2},{6,3,5,4,3},{5,8,7,4,5}};
        Assert::That(sum_of_minimums(test), Equals(9));
        test = { {11,12,14,54}, {67,89,90,56}, {7,9,4,3}, {9,8,6,7}};
        Assert::That(sum_of_minimums(test), Equals(76));
    }
};
